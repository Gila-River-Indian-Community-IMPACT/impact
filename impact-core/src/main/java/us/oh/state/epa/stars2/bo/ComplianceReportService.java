/*
 * Generated by XDoclet - Do not edit!
 */
package us.oh.state.epa.stars2.bo;

import java.rmi.RemoteException;
import java.util.List;

import us.oh.state.epa.stars2.database.dbObjects.ValidationMessage;
import us.oh.state.epa.stars2.database.dbObjects.complianceReport.ComplianceReport;
import us.oh.state.epa.stars2.database.dbObjects.complianceReport.ComplianceReportAttachment;
import us.oh.state.epa.stars2.database.dbObjects.complianceReport.ComplianceReportCategoryInfo;
import us.oh.state.epa.stars2.database.dbObjects.complianceReport.ComplianceReportLimit;
import us.oh.state.epa.stars2.database.dbObjects.facility.Facility;
import us.oh.state.epa.stars2.database.dbObjects.infrastructure.Note;
import us.oh.state.epa.stars2.framework.exception.DAOException;
import us.oh.state.epa.stars2.webcommon.ServiceFactoryException;

/**
 * Service interface for ComplianceReportEJB.
 */
public interface ComplianceReportService {
	
	/**
	 * Create a new row in the CR_COMPLIANCE_REPORT table.
	 */
	public us.oh.state.epa.stars2.database.dbObjects.complianceReport.ComplianceReport createComplianceReport(
			us.oh.state.epa.stars2.database.dbObjects.complianceReport.ComplianceReport complianceReport,
			us.oh.state.epa.stars2.database.dbObjects.facility.Facility facility)
			throws us.oh.state.epa.stars2.framework.exception.DAOException;

	/**
	 * Copy data from fromReport to toReport and save changes to the database
	 * 
	 * @param fromReport
	 * @param toReport
	 * @throws DAOException
	 */
	public void copyComplianceReportData(
			us.oh.state.epa.stars2.database.dbObjects.complianceReport.ComplianceReport fromReport,
			us.oh.state.epa.stars2.database.dbObjects.complianceReport.ComplianceReport toReport)
			throws us.oh.state.epa.stars2.framework.exception.DAOException,
			java.rmi.RemoteException;

	/**
	 * Create compliance report submitted from the portal.
	 * 
	 * @param complianceReport
	 * @param trans
	 * @throws DAOException
	 */
	public us.oh.state.epa.stars2.database.dbObjects.complianceReport.ComplianceReport createComplianceReportFromPortal(
			us.oh.state.epa.stars2.database.dbObjects.complianceReport.ComplianceReport complianceReport,
			us.oh.state.epa.stars2.database.dbObjects.facility.Facility facility,
			String[] targetFacilityIds,
			us.oh.state.epa.stars2.database.dao.Transaction trans)
			throws us.oh.state.epa.stars2.framework.exception.DAOException,
			java.rmi.RemoteException;

	/**
	 * Delete row in the DC_CORRESPONDENCE table.
	 */
	public void deleteComplianceReport(
			us.oh.state.epa.stars2.database.dbObjects.complianceReport.ComplianceReport complianceReport)
			throws us.oh.state.epa.stars2.framework.exception.DAOException,
			java.rmi.RemoteException;

	/**
	 * Delete row in the DC_CORRESPONDENCE table.
	 */
	public void deleteComplianceReport(
			us.oh.state.epa.stars2.database.dbObjects.complianceReport.ComplianceReport complianceReport,
			us.oh.state.epa.stars2.database.dao.Transaction trans)
			throws us.oh.state.epa.stars2.framework.exception.DAOException,
			java.rmi.RemoteException;

	/**
	 * Delete row in the DC_CORRESPONDENCE table.
	 */
	public void deleteComplianceReport(
			us.oh.state.epa.stars2.database.dbObjects.complianceReport.ComplianceReport complianceReport,
			us.oh.state.epa.stars2.database.dao.Transaction trans,
			boolean removeFiles)
			throws us.oh.state.epa.stars2.framework.exception.DAOException,
			java.rmi.RemoteException;

	/**
	 * Delete row in the CR_COMPLIANCE_DEVIATION table.
	 */
	public boolean deleteComplianceDeviation(
			us.oh.state.epa.stars2.database.dbObjects.complianceReport.ComplianceDeviation complianceDeviation)
			throws us.oh.state.epa.stars2.framework.exception.DAOException,
			java.rmi.RemoteException;

	/**
	 * Delete row in the DC_CORRESPONDENCE table.
	 */
	public boolean deleteComplianceAttachment(
			us.oh.state.epa.stars2.database.dbObjects.complianceReport.ComplianceReport complianceReport,
			us.oh.state.epa.stars2.database.dbObjects.complianceReport.ComplianceReportAttachment attachment)
			throws us.oh.state.epa.stars2.framework.exception.DAOException,
			java.rmi.RemoteException;

	public us.oh.state.epa.stars2.database.dbObjects.complianceReport.ComplianceReportList[] searchComplianceReports(
			java.lang.String reportCRPTId, java.lang.String facilityID,
			java.lang.String facilityName, java.lang.String doLaaCd,
			java.lang.String reportType, java.lang.String reportStatus,
			java.lang.String reportYear, java.lang.String deviationsReported,
			java.lang.String dateBy, java.sql.Date dtBegin,
			java.sql.Date dtEnd, java.lang.String reportAccepted,
			java.lang.String otherTypeCd, boolean readOnlySchema,
			boolean unlimitedResults, java.lang.String cmpId, java.lang.String permitClassCd, java.lang.String facilityTypeCd,
			java.lang.String dapcReviewComments)
			throws us.oh.state.epa.stars2.framework.exception.DAOException,
			java.rmi.RemoteException;

	public java.util.List<us.oh.state.epa.stars2.database.dbObjects.complianceReport.ComplianceReportList> newAfsTvCc()
			throws us.oh.state.epa.stars2.framework.exception.DAOException,
			java.rmi.RemoteException;

	public us.oh.state.epa.stars2.database.dbObjects.complianceReport.ComplianceReportList[] searchComplianceReports(
			java.lang.String reportCRPTId, java.lang.String facilityID,
			java.lang.String facilityName, java.lang.String doLaaCd,
			java.lang.String reportType, java.lang.String reportStatus,
			java.lang.String reportYear, java.lang.String deviationsReported,
			java.lang.String dateBy, java.sql.Date dtBegin,
			java.sql.Date dtEnd, java.lang.String reportAccepted,
			java.lang.String otherTypeCd, boolean unlimitedResults, java.lang.String cmpId, java.lang.String permitClassCd,
			java.lang.String facilityTypeCd, java.lang.String dapcReviewComments)
			throws us.oh.state.epa.stars2.framework.exception.DAOException,
			java.rmi.RemoteException;

	/**
	 * Locate all of the compliance reports for a given facility. 
	 */
	public us.oh.state.epa.stars2.database.dbObjects.complianceReport.ComplianceReportList[] searchComplianceReportByFacility(
			java.lang.String facilityID, boolean readOnlySchema)
			throws us.oh.state.epa.stars2.framework.exception.DAOException,
			java.rmi.RemoteException;

	/**
	 * Locate all of the compliance reports for a given facility. searchComplianceReportByFacilityAndStatus
	 */
	public us.oh.state.epa.stars2.database.dbObjects.complianceReport.ComplianceReportList[] searchComplianceReportByFacilityAndStatus(
			java.lang.String facilityID, java.lang.String reportStatus)
			throws us.oh.state.epa.stars2.framework.exception.DAOException,
			java.rmi.RemoteException;
	
	/**
	 * Locate all of the compliance reports for a given facility.
	 */
	public us.oh.state.epa.stars2.database.dbObjects.complianceReport.ComplianceReportList[] searchComplianceReportByFacility(
			java.lang.String facilityID)
			throws us.oh.state.epa.stars2.framework.exception.DAOException,
			java.rmi.RemoteException;

	public boolean modifyComplianceReport(
			us.oh.state.epa.stars2.database.dbObjects.complianceReport.ComplianceReport complianceReport,
			int userId)
			throws us.oh.state.epa.stars2.framework.exception.DAOException,
			java.rmi.RemoteException;

	public boolean modifyComplianceReport(
			us.oh.state.epa.stars2.database.dbObjects.complianceReport.ComplianceReport complianceReport,
			us.oh.state.epa.stars2.database.dbObjects.Task task, int userId)
			throws us.oh.state.epa.stars2.framework.exception.DAOException,
			java.rmi.RemoteException;

	public boolean modifyComplianceDeviation(
			us.oh.state.epa.stars2.database.dbObjects.complianceReport.ComplianceDeviation complianceDeviation)
			throws us.oh.state.epa.stars2.framework.exception.DAOException,
			java.rmi.RemoteException;

	public boolean modifyComplianceAttachment(
			us.oh.state.epa.stars2.database.dbObjects.complianceReport.ComplianceReport compReport,
			us.oh.state.epa.stars2.database.dbObjects.complianceReport.ComplianceReportAttachment complianceAttachment)
			throws us.oh.state.epa.stars2.framework.exception.DAOException,
			java.rmi.RemoteException;

	public us.oh.state.epa.stars2.database.dbObjects.complianceReport.ComplianceReport retrieveComplianceReport(
			int complianceReportId)
			throws us.oh.state.epa.stars2.framework.exception.DAOException,
			java.rmi.RemoteException;

	public us.oh.state.epa.stars2.database.dbObjects.complianceReport.ComplianceReport retrieveComplianceReport(
			int complianceReportId,
			boolean readOnlySchema)
			throws us.oh.state.epa.stars2.framework.exception.DAOException,
			java.rmi.RemoteException;

	public us.oh.state.epa.stars2.database.dbObjects.complianceReport.ComplianceReport retrieveComplianceReportOnly(
			int complianceReportId, boolean readOnlySchema)
			throws us.oh.state.epa.stars2.framework.exception.DAOException,
			java.rmi.RemoteException;

	public int retrievePerReportCount(java.lang.String facilityID,
			java.lang.String reportStatus, java.sql.Timestamp startDate,
			java.sql.Timestamp endDate)
			throws us.oh.state.epa.stars2.framework.exception.DAOException,
			java.rmi.RemoteException;

	public int retrievePerReportCount(java.lang.String facilityID,
			java.lang.String reportStatus, java.sql.Timestamp startDate,
			java.sql.Timestamp endDate, boolean readOnlySchema)
			throws us.oh.state.epa.stars2.framework.exception.DAOException,
			java.rmi.RemoteException;

	/**
	 * Create a new row in the appropriate Compliance Attachment table.
	 */
	public us.oh.state.epa.stars2.database.dbObjects.attachments.Attachment createComplianceAttachment(
			us.oh.state.epa.stars2.database.dbObjects.complianceReport.ComplianceReport compReport,
			us.oh.state.epa.stars2.database.dbObjects.attachments.Attachment attachment,
			java.io.InputStream fileStream,
			us.oh.state.epa.stars2.database.dbObjects.complianceReport.ComplianceReportAttachment tsAttachment,
			java.io.InputStream tsInputStream)
			throws us.oh.state.epa.stars2.framework.exception.DAOException,
			us.oh.state.epa.stars2.framework.exception.ValidationException,
			java.rmi.RemoteException;

	/**
	 * Create a new row in the appropriate Compliance Attachment table. ASSUMES
	 * the actual attachment is already in file system.
	 */
	public us.oh.state.epa.stars2.database.dbObjects.complianceReport.ComplianceReportAttachment createComplianceAttachmentFromPortal(
			us.oh.state.epa.stars2.database.dbObjects.complianceReport.ComplianceReport compReport,
			us.oh.state.epa.stars2.database.dbObjects.complianceReport.ComplianceReportAttachment attachment,
			us.oh.state.epa.stars2.database.dao.Transaction trans)
			throws us.oh.state.epa.stars2.framework.exception.DAOException,
			us.oh.state.epa.stars2.framework.exception.ValidationException,
			java.rmi.RemoteException;

	/**
	 * Create a new row in the CR_COMPLIANCE_DEVIATION table.
	 */
	public us.oh.state.epa.stars2.database.dbObjects.complianceReport.ComplianceDeviation createComplianceDeviation(
			us.oh.state.epa.stars2.database.dbObjects.complianceReport.ComplianceDeviation complianceDeviation)
			throws us.oh.state.epa.stars2.framework.exception.DAOException,
			us.oh.state.epa.stars2.framework.exception.ValidationException,
			java.rmi.RemoteException;

	/**
	 * Write pdf version of application to an output stream.
	 * 
	 * @param complianceReport
	 * @param doc
	 * @param os
	 * @return
	 * @throws DAOException
	 */
	// public boolean writeComplianceReportToStream(
	//		us.oh.state.epa.stars2.database.dbObjects.complianceReport.ComplianceReport complianceReport,
	//		us.oh.state.epa.stars2.database.dbObjects.document.TmpDocument doc, 
	//		java.io.OutputStream os,
	//		boolean hideTradeSecret) throws java.io.IOException,
	//		java.rmi.RemoteException;

	public us.oh.state.epa.stars2.database.dbObjects.complianceReport.ComplianceDocument getComplianceReportDocument(
			us.oh.state.epa.stars2.database.dbObjects.complianceReport.ComplianceReport complianceReport)
			throws java.rmi.RemoteException;

	/**
	 * Create a zip file containing application data and all its related
	 * attachments and download its contents.
	 * 
	 * @param complianceReport
	 * @param submittedRpt
	 * @param rpt
	 * @param hideTradeSecret
	 * @param readOnly
	 * @return 
	 * @throws DAOException
	 */
	public us.oh.state.epa.stars2.database.dbObjects.document.Document generateTempComplianceReportAttachmentZipFile(
			us.oh.state.epa.stars2.database.dbObjects.complianceReport.ComplianceReport complianceReport, 
			us.oh.state.epa.stars2.database.dbObjects.complianceReport.ComplianceDocument submittedRpt,
			us.oh.state.epa.stars2.database.dbObjects.document.Document facilityDoc,
    		us.oh.state.epa.stars2.database.dbObjects.document.TmpDocument rpt, 
    		boolean hideTradeSecret, boolean readOnly)
			throws java.io.FileNotFoundException, java.io.IOException,
			java.rmi.RemoteException;

	/**
	 * Get list of documents associated with the application.
	 * 
	 * @param complianceReport
	 * @param rptAttachments
	 * @param readOnly
	 * @param hideTradeSecret
	 * @return
	 * @throws DAOException
	 */
	public java.util.List<us.oh.state.epa.stars2.database.dbObjects.document.Document> getPrintableDocumentList(
			us.oh.state.epa.stars2.database.dbObjects.complianceReport.ComplianceReport complianceReport,
			us.oh.state.epa.stars2.database.dbObjects.document.Document facilityDoc,
			java.util.List<us.oh.state.epa.stars2.database.dbObjects.document.Document> rptAttachments,
			boolean readOnly, Boolean hideTradeSecret)
			throws java.rmi.RemoteException;

	/**
	 * Generate a pdf file containing data from the compliance report and create
	 * a temporary Document object refrencing this file.
	 * 
	 * @param complianceReport
	 *            the compliance report to be rendered in a PDF file.
	 * @return Document object referencing pdf file.
	 */
	// public us.oh.state.epa.stars2.database.dbObjects.document.Document generateTempComplianceReportPDF(
	//		us.oh.state.epa.stars2.database.dbObjects.complianceReport.ComplianceReport complianceReport)
	//		throws us.oh.state.epa.stars2.framework.exception.DAOException,
	//		java.rmi.RemoteException;

	/**
	 * Return pdf version of application as an InputStream.
	 * 
	 * @param app
	 * @param hideTradeSecret
	 * @return
	 * @throws DAOException
	 */
	// public us.oh.state.epa.stars2.database.dbObjects.complianceReport.ComplianceDocument createComplianceReportPDFDocument(
	//		us.oh.state.epa.stars2.database.dbObjects.complianceReport.ComplianceReport complianceReport,
	//		java.lang.String userName)
	//		throws us.oh.state.epa.stars2.framework.exception.DAOException,
	//		java.rmi.RemoteException;

	/**
	 * Create a zip file containing application pdf files.
	 * 
	 * @param app
	 * @throws DAOException
	 */
	public us.oh.state.epa.stars2.database.dbObjects.document.Document generateTempComplianceReportPDFZipFile(
			us.oh.state.epa.stars2.database.dbObjects.complianceReport.ComplianceReport complianceReport)
			throws java.io.FileNotFoundException, java.io.IOException,
			java.rmi.RemoteException;

	/**
	 * Add attestation document to compliance report
	 * 
	 * @param complianceReport
	 * @param attestationDoc
	 * @param trans
	 * @throws DAOException
	 */
	public void addAttestationDocument(
			us.oh.state.epa.stars2.database.dbObjects.complianceReport.ComplianceReport complianceReport,
			us.oh.state.epa.stars2.database.dbObjects.document.Document attestationDoc,
			us.oh.state.epa.stars2.database.dao.Transaction trans)
			throws us.oh.state.epa.stars2.framework.exception.DAOException,
			java.rmi.RemoteException;

	public void removeAttestationDocument(
			us.oh.state.epa.stars2.database.dbObjects.complianceReport.ComplianceReport complianceReport,
			us.oh.state.epa.stars2.database.dao.Transaction trans)
			throws us.oh.state.epa.stars2.framework.exception.DAOException,
			java.rmi.RemoteException;

	public void addSubmissionAttachments(
			us.oh.state.epa.stars2.database.dbObjects.Task task)
			throws us.oh.state.epa.stars2.framework.exception.DAOException,
			java.io.IOException, java.io.FileNotFoundException,
			java.rmi.RemoteException;

	/**
	 * Return pdf file RO can sign as attestation document.
	 * 
	 * @param cr
	 * @return
	 * @throws DAOException
	 */
	public us.oh.state.epa.stars2.database.dbObjects.complianceReport.ComplianceReportAttachment createCRAttestationDocument(
			us.oh.state.epa.stars2.database.dbObjects.complianceReport.ComplianceReport cr)
			throws us.oh.state.epa.stars2.framework.exception.DAOException,
			java.rmi.RemoteException;

	public java.lang.String getDAPCAttestationMessage(
			us.oh.state.epa.stars2.database.dbObjects.complianceReport.ComplianceReport report,
			java.lang.String permitClassCd) throws java.rmi.RemoteException;

	public java.lang.String retrievePerReportingPeriods(
			java.lang.String facilityId,
			java.util.List<us.oh.state.epa.stars2.webcommon.compliance.PerReportingPeriod> perList)
			throws java.rmi.RemoteException;

	public java.lang.Integer afsLockTvCc(
			java.lang.String scscId,
			us.oh.state.epa.stars2.database.dbObjects.complianceReport.ComplianceReportList crl)
			throws us.oh.state.epa.stars2.framework.exception.DAOException,
			java.rmi.RemoteException;

	public java.util.List<us.oh.state.epa.stars2.database.dbObjects.complianceReport.ComplianceReportList> retrieveTvCcByAfsId(
			java.lang.String scscId, java.lang.String afsId)
			throws us.oh.state.epa.stars2.framework.exception.DAOException,
			java.rmi.RemoteException;

	public boolean afsSetDateTvCc(
			us.oh.state.epa.stars2.database.dbObjects.complianceReport.ComplianceReportList tvCc)
			throws us.oh.state.epa.stars2.framework.exception.DAOException,
			java.rmi.RemoteException;

	public Note[] retrieveNotes(int reportId)	throws us.oh.state.epa.stars2.framework.exception.DAOException,	java.rmi.RemoteException;
	
	public us.oh.state.epa.stars2.database.dbObjects.complianceReport.ComplianceReportNote createNote(us.oh.state.epa.stars2.database.dbObjects.complianceReport.ComplianceReportNote note)
			throws us.oh.state.epa.stars2.framework.exception.DAOException, java.rmi.RemoteException;
		
	boolean modifyNote(us.oh.state.epa.stars2.database.dbObjects.complianceReport.ComplianceReportNote note) throws us.oh.state.epa.stars2.framework.exception.DAOException, java.rmi.RemoteException;
	
	public boolean removeNote(us.oh.state.epa.stars2.database.dbObjects.complianceReport.ComplianceReportNote note)
			throws us.oh.state.epa.stars2.framework.exception.DAOException, java.rmi.RemoteException;
	
	/**
	 * Set the "validated" flag for <code>st</code> to <code>validated</code>.
	 * This method exists to avoid a full update of all Compliance attributes
	 * when all that is needed is to set the validated flag.
	 * 
	 * @param st
	 *            the Compliance Report
	 * @param validated
	 *            <code>true</code> or <code>false</code> to indicate whether
	 *            the Compliance Report is validated.
	 * @return
	 * @throws DAOException
	 */
	public boolean setValidatedFlag(
			us.oh.state.epa.stars2.database.dbObjects.complianceReport.ComplianceReport report,
			boolean validated,
			boolean readOnly)
			throws us.oh.state.epa.stars2.framework.exception.DAOException,
			java.rmi.RemoteException;
	
	public ComplianceReportCategoryInfo[] retrieveComplianceReportCategoryInfo()
			throws DAOException;
	
	public ComplianceReportAttachment[] retrieveCrAttachments(
			ComplianceReport report, boolean readOnlySchema)
			throws DAOException;
	
	public List<ValidationMessage> validateComplianceReport(int reportId,
			boolean useReadOnlyDB) throws RemoteException,
			ServiceFactoryException;
	
	void associateRptWithCurrentFacility(ComplianceReport complianceReport,
			Facility facility, Integer userId) throws DAOException;
	
	// Compliance Report Limits

	public List<ComplianceReportLimit> retrieveComplianceReportLimitListByFpId(
			Integer fpId) throws DAOException;

	public List<ComplianceReportLimit> retrieveComplianceReportLimitListByMonitorId(
			Integer monitorId) throws DAOException;

	public ComplianceReportLimit createComplianceReportLimit(
			ComplianceReportLimit fccl) throws DAOException;

	public ComplianceReportLimit modifyComplianceReportLimit(
			ComplianceReportLimit fccl) throws DAOException;

	public void removeComplianceReportLimit(ComplianceReportLimit crl)
			throws DAOException;

	ComplianceReportLimit retrieveComplianceReportLimitByMonitorIdAndCorrId(
			Integer monitorId, Integer corrLimitId) throws DAOException;

	// Compliance Report Monitors

	public us.oh.state.epa.stars2.database.dbObjects.complianceReport.ComplianceReportMonitor createComplianceReportMonitor(
			us.oh.state.epa.stars2.database.dbObjects.complianceReport.ComplianceReportMonitor complianceReportMonitor)
			throws us.oh.state.epa.stars2.framework.exception.DAOException,
			java.rmi.RemoteException,
			us.oh.state.epa.stars2.webcommon.ServiceFactoryException;

	public void deleteComplianceReportMonitor(
			us.oh.state.epa.stars2.database.dbObjects.complianceReport.ComplianceReportMonitor complianceReportMonitor)
			throws us.oh.state.epa.stars2.framework.exception.DAOException,
			java.rmi.RemoteException;

	public void modifyComplianceReportMonitor(
			us.oh.state.epa.stars2.database.dbObjects.complianceReport.ComplianceReportMonitor complianceReportMonitor)
			throws us.oh.state.epa.stars2.framework.exception.DAOException,
			java.rmi.RemoteException;

	public us.oh.state.epa.stars2.database.dbObjects.complianceReport.ComplianceReportMonitor retrieveComplianceReportMonitor(
			java.lang.Integer complianceReportMonitorId)
			throws us.oh.state.epa.stars2.framework.exception.DAOException,
			java.rmi.RemoteException;

	public us.oh.state.epa.stars2.database.dbObjects.complianceReport.ComplianceReportMonitor[] retrieveComplianceReportMonitorListByReportId(
			Integer reportId) throws DAOException;

	public us.oh.state.epa.stars2.database.dbObjects.complianceReport.ComplianceReportLimit[] retrieveComplianceReportLimitListByReportId(
			Integer reportId) throws DAOException;
	
	public ComplianceReport refreshMonitorsAndLimits(ComplianceReport complianceReport, Facility facility) throws DAOException;
	
	/**
	 * @param tradeSecretDocId
	 * @return ComplianceReportAttachment
	 * @throws DAOException
	 */
	ComplianceReportAttachment retrieveCRTradeSecretAttachmentInfoById(Integer tradeSecretDocId) throws DAOException;
}

/*
 * Generated by XDoclet - Do not edit!
 */
package us.oh.state.epa.stars2.bo;

import us.oh.state.epa.stars2.database.dbObjects.ValidationMessage;
import us.oh.state.epa.stars2.database.dbObjects.application.DelegationRequest;
import us.oh.state.epa.stars2.database.dbObjects.application.RelocateRequest;
import us.oh.state.epa.stars2.framework.exception.DAOException;

/**
 * Service interface for RelocateRequestEJB.
 */
public interface RelocateRequestService
   
{

   public us.oh.state.epa.stars2.database.dbObjects.application.RelocateRequest createRelocateRequest( us.oh.state.epa.stars2.database.dbObjects.application.RelocateRequest relocateRequest )
      throws us.oh.state.epa.stars2.framework.exception.DAOException, us.oh.state.epa.stars2.framework.exception.ValidationException, java.rmi.RemoteException;

   /**
    * Create a new row in the appropriate Compliance Attachment table.
    */
   public us.oh.state.epa.stars2.database.dbObjects.attachments.Attachment createRelocationAttachment( us.oh.state.epa.stars2.database.dbObjects.application.RelocateRequest request,us.oh.state.epa.stars2.database.dbObjects.attachments.Attachment attachment,java.io.InputStream fileStream )
      throws us.oh.state.epa.stars2.framework.exception.DAOException, us.oh.state.epa.stars2.framework.exception.ValidationException, java.rmi.RemoteException;

   /**
    * Delete row in the DC_CORRESPONDENCE table.
    */
   public boolean deleteRelocationAttachment( us.oh.state.epa.stars2.database.dbObjects.application.RelocateRequest request,us.oh.state.epa.stars2.database.dbObjects.attachments.Attachment attachment )
      throws us.oh.state.epa.stars2.framework.exception.DAOException, java.rmi.RemoteException;

   public boolean modifyRelocationAttachment( us.oh.state.epa.stars2.database.dbObjects.application.RelocateRequest request,us.oh.state.epa.stars2.database.dbObjects.attachments.Attachment attachment )
      throws us.oh.state.epa.stars2.framework.exception.DAOException, java.rmi.RemoteException;

   public us.oh.state.epa.stars2.database.dbObjects.application.RelocateRequest modifyRelocateRequest( us.oh.state.epa.stars2.database.dbObjects.application.RelocateRequest relocateRequest )
      throws us.oh.state.epa.stars2.framework.exception.DAOException, us.oh.state.epa.stars2.framework.exception.ValidationException, java.rmi.RemoteException;

   public boolean submit( us.oh.state.epa.stars2.database.dbObjects.application.RelocateRequest ret,boolean internalSubmit )
      throws java.rmi.RemoteException;

   public boolean deleteRelocateRequest( us.oh.state.epa.stars2.database.dbObjects.application.RelocateRequest relocateRequest,boolean deleteAttachments )
      throws us.oh.state.epa.stars2.framework.exception.DAOException, us.oh.state.epa.stars2.framework.exception.ValidationException, java.rmi.RemoteException;

   /**
    * Locate all of the relocation requests for a given facility.
    */
   public us.oh.state.epa.stars2.database.dbObjects.application.RelocateRequest[] retrieveRelocateRequests( java.lang.String facilityID )
      throws us.oh.state.epa.stars2.framework.exception.DAOException, java.rmi.RemoteException;

   /**
    * Locate relocation request by id
    */
   public us.oh.state.epa.stars2.database.dbObjects.application.RelocateRequest retrieveRelocateRequest( int requestId,boolean staging )
      throws us.oh.state.epa.stars2.framework.exception.DAOException, java.rmi.RemoteException;

   /**
    * Locate relocation request by id
    */
   public us.oh.state.epa.stars2.database.dbObjects.application.RelocateRequest retrieveRelocateRequest( int requestId,java.lang.String facilityId )
      throws us.oh.state.epa.stars2.framework.exception.DAOException, java.rmi.RemoteException;

   /**
    * Locate relocation request by id
    */
   public us.oh.state.epa.stars2.database.dbObjects.application.RelocateRequest retrieveRelocateRequestByAppId( int applicationId )
      throws us.oh.state.epa.stars2.framework.exception.DAOException, java.rmi.RemoteException;

   /**
    * Locate relocation request by id
    */
   public us.oh.state.epa.stars2.database.dbObjects.permit.Permit[] getPermits( java.lang.String facilityId )
      throws us.oh.state.epa.stars2.framework.exception.DAOException, java.rmi.RemoteException;

   /**
    * Create a zip file containing application data and all its related attachments and download its contents.
    * @param app
    * @throws DAOException
    */
   public us.oh.state.epa.stars2.database.dbObjects.document.Document generateTempITRAttachmentZipFile( us.oh.state.epa.stars2.database.dbObjects.application.RelocateRequest relocateRequest )
      throws java.io.FileNotFoundException, java.io.IOException, java.rmi.RemoteException;

   /**
    * Create a new relocation request submitted from gateway.
    * @param Facility Facility inventory to create from gateway.
    * @param newFpId FP iD to be used when creating a new Facility
    * @parm trans transaction
    */
   public void createRelocationRequestFromPortal( us.oh.state.epa.stars2.database.dbObjects.application.RelocateRequest portalRelReq,us.oh.state.epa.stars2.database.dao.Transaction trans )
      throws us.oh.state.epa.stars2.framework.exception.DAOException, java.rmi.RemoteException;

   /**
    * Remove ITR attachments directories.
    */
   public void RemoveRelocationRequestDirs( us.oh.state.epa.stars2.database.dbObjects.application.RelocateRequest relocateRequest,java.lang.String facId,boolean deleteAttach )
      throws java.rmi.RemoteException;

   /**
    * Retrieve preapproved addresses for facility
    * @param facilityId
    */
   public us.oh.state.epa.stars2.database.dbObjects.infrastructure.SimpleDef[] retrievePreApprovedAddressesForFacility( java.lang.String facilityId )
      throws us.oh.state.epa.stars2.framework.exception.DAOException, java.rmi.RemoteException;

   /**
    * Add attestation document to application
    * @param app
    * @param attestationDoc
    * @param trans
    * @throws DAOException
    */
   public void addAttestationDocument( us.oh.state.epa.stars2.database.dbObjects.application.RelocateRequest relocation,us.oh.state.epa.stars2.database.dbObjects.attachments.Attachment attestationDoc,us.oh.state.epa.stars2.database.dao.Transaction trans )
      throws us.oh.state.epa.stars2.framework.exception.DAOException, java.rmi.RemoteException;

   public void removeAttestationDocument( us.oh.state.epa.stars2.database.dbObjects.application.RelocateRequest relocation,us.oh.state.epa.stars2.database.dao.Transaction trans )
      throws us.oh.state.epa.stars2.framework.exception.DAOException, java.rmi.RemoteException;

   public void addSubmissionAttachments( us.oh.state.epa.stars2.database.dbObjects.Task task )
      throws us.oh.state.epa.stars2.framework.exception.DAOException, java.io.IOException, java.io.FileNotFoundException, java.rmi.RemoteException;

   /**
    * Return pdf file RO can sign as attestation document.
    * @param relocation
    * @return 
    * @throws DAOException
    */
   public us.oh.state.epa.stars2.database.dbObjects.attachments.Attachment createITRAttestationDocument( us.oh.state.epa.stars2.database.dbObjects.application.RelocateRequest relocation )
      throws us.oh.state.epa.stars2.framework.exception.DAOException, java.rmi.RemoteException;

   public ValidationMessage[] validateRelocateRequest(RelocateRequest relocateRequest)
			throws DAOException;

}
